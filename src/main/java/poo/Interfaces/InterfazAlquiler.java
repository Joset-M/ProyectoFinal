/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package poo.Interfaces;

import poo.Clases.*;
import java.awt.Point;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario-Asus
 */
public class InterfazAlquiler extends javax.swing.JFrame {

    /**
     * Creates new form InterfazAlquiler
     */
    
    private SistemaConcecionario sistemaConcecionario;
    
    public InterfazAlquiler(SistemaConcecionario sistemaConcecionario) {
        initComponents();
        setLocationRelativeTo(null);
        this.sistemaConcecionario = sistemaConcecionario; // Asigna la instancia pasada
        
        Point location = getLocation(); 
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                setLocation(location); 
            }
        });
        
        // Opcional: Cargar los vehículos en el JComboBox al iniciar la interfaz
        cargarVehiculosEnComboBox(); 
    }
    
    
    public InterfazAlquiler() {
        initComponents();
        setLocationRelativeTo(null);
        // NOTA: Si usas este constructor, 'sistemaConcecionario' será null o no tendrá datos cargados
        // Es mejor SIEMPRE pasar la instancia cargada.
        // Si no hay otra opción, aquí podrías hacer:
        // this.sistemaConcecionario = new SistemaConcecionario(); // Esto cargaría los datos, pero si ya hay una instancia global, duplicaría
        
        Point location = getLocation(); 
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                setLocation(location); 
            }
        });
    }
    
    private void cargarVehiculosEnComboBox() {
        jCVehiculo.removeAllItems(); // Limpiar ítems existentes
        for (Vehiculo v : sistemaConcecionario.concesionaria.getVevhiculos()) {
            if (v.isDisponible()) { // Solo añadir vehículos disponibles
                jCVehiculo.addItem(v.toString());
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTClienteBuscado = new javax.swing.JTextField();
        jBBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jBCargarVehiculos = new javax.swing.JButton();
        jCVehiculo = new javax.swing.JComboBox<>();
        jBAlquillar = new javax.swing.JButton();
        jTDias = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAResumen = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ALQUILA TU VEHICULO!");

        jLabel2.setText("CI Cliente:");

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel3.setText("Dias Alquilados:");
        jLabel3.setToolTipText("");

        jBCargarVehiculos.setText("Vehiculos");
        jBCargarVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCargarVehiculosActionPerformed(evt);
            }
        });

        jCVehiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jBAlquillar.setText("Alquilar");
        jBAlquillar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlquillarActionPerformed(evt);
            }
        });

        jTAResumen.setColumns(20);
        jTAResumen.setRows(5);
        jScrollPane1.setViewportView(jTAResumen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(1, 1, 1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jBAlquillar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTDias)
                                    .addComponent(jTClienteBuscado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jCVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBCargarVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTClienteBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCargarVehiculos)
                    .addComponent(jCVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBAlquillar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        String clienteBuscado = jTClienteBuscado.getText().trim();
        boolean encontrado = false;
        

    try (BufferedReader br = new BufferedReader(new FileReader("registro/clientes.txt"))) {
        String linea;
        while ((linea = br.readLine()) != null) {
            if (linea.contains(clienteBuscado)) {
                encontrado = true;
                break;
            }
        }

        if (encontrado) {
            JOptionPane.showMessageDialog(this, "Cliente encontrado.");
        } else {
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + e.getMessage());
    }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBCargarVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCargarVehiculosActionPerformed
        jCVehiculo.removeAllItems(); 

    try (BufferedReader br = new BufferedReader(new FileReader("registro/vehiculos.txt"))) {
        String linea;

        while ((linea = br.readLine()) != null) {
            if (linea.contains("Disponible:true")) {
                int modeloInicio = linea.indexOf("modelo:") + 7;
                int modeloFin = linea.indexOf(" marca:");
                String modelo = linea.substring(modeloInicio, modeloFin).trim();

                int marcaInicio = linea.indexOf("marca:") + 6;
                int marcaFin = linea.indexOf(" precio");
                String marca = linea.substring(marcaInicio, marcaFin).trim();

                jCVehiculo.addItem("modelo:" + modelo + " marca:" + marca);
            }
        }

        if (jCVehiculo.getItemCount() == 0) {
            JOptionPane.showMessageDialog(this, "No hay vehículos disponibles.");
        }

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + e.getMessage());
    }
    }//GEN-LAST:event_jBCargarVehiculosActionPerformed

    private void jBAlquillarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlquillarActionPerformed
        String clienteCI = jTClienteBuscado.getText().trim();
        Object selected = jCVehiculo.getSelectedItem();

        if (clienteCI.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese la cédula del cliente.");
            return;
        }
        if (selected == null) {
            JOptionPane.showMessageDialog(this, "Seleccione un vehículo.");
            return;
        }
        String vehiculoSeleccionadoTexto = selected.toString(); // Esto es la representación completa del vehículo del JComboBox

        String nombreCliente = "";
        boolean clienteEncontrado = false;
        Cliente clienteEncontradoObj = null; // Para guardar el objeto Cliente

        // 1. Buscar cliente en el ArrayList de SistemaConcecionario
        for (Cliente cliente : sistemaConcecionario.concesionaria.getClientes()) {
            if (cliente.getCedula().equals(clienteCI)) {
                clienteEncontrado = true;
                nombreCliente = cliente.getNombre();
                clienteEncontradoObj = cliente;
                break;
            }
        }

        if (!clienteEncontrado) {
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
            return;
        }

        // 2. Extraer la placa del vehículo seleccionado del JComboBox
        // El formato es "[placa:PLACA modelo:MODELO marca:MARCA ...]"
        String placaVehiculoSeleccionado = null;
        Pattern patternVehiculo = Pattern.compile("\\[placa:(.*?) modelo:.*");
        Matcher matcherVehiculo = patternVehiculo.matcher(vehiculoSeleccionadoTexto);
        if (matcherVehiculo.matches()) {
            placaVehiculoSeleccionado = matcherVehiculo.group(1).trim();
        } else {
            JOptionPane.showMessageDialog(this, "Error al obtener la placa del vehículo seleccionado.");
            return;
        }

        Vehiculo vehiculoParaAlquilar = null;
        boolean vehiculoDisponible = false;

        // 3. Buscar el vehículo en el ArrayList y actualizar su disponibilidad
        for (Vehiculo vehiculo : sistemaConcecionario.concesionaria.getVevhiculos()) {
            if (vehiculo.getPlaca().equals(placaVehiculoSeleccionado)) {
                vehiculoParaAlquilar = vehiculo;
                if (vehiculo.isDisponible()) {
                    vehiculoDisponible = true;
                    vehiculo.setDisponible(false); // Cambiar disponibilidad a false
                    break;
                } else {
                    JOptionPane.showMessageDialog(this, "El vehículo seleccionado no está disponible.");
                    return;
                }
            }
        }

        if (vehiculoParaAlquilar == null) {
            JOptionPane.showMessageDialog(this, "Vehículo no encontrado en el sistema.");
            return;
        }
        
        if (!vehiculoDisponible) {
            // Este caso ya fue manejado dentro del bucle, pero se deja para claridad
            return; 
        }

        // 4. Guardar los cambios en el archivo de vehículos
        sistemaConcecionario.guardarVehiculos("vehiculos.txt"); // Guarda la lista actualizada de vehículos

        // 5. Mostrar resumen en JTextArea y JOptionPane
        String resumen = "Cliente: " + nombreCliente + " (C.I.: " + clienteCI + ")\n"
                       + "Vehículo alquilado: " + vehiculoParaAlquilar.getMarca() + " " + vehiculoParaAlquilar.getModelo() + " (Placa: " + vehiculoParaAlquilar.getPlaca() + ")\n"
                       + "Estado del vehículo: No Disponible";
        jTAResumen.setText(resumen);
        JOptionPane.showMessageDialog(null, "Resumen del Alquiler:\n" + resumen, "Alquiler Confirmado", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jBAlquillarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazAlquiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlquillar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCargarVehiculos;
    private javax.swing.JComboBox<String> jCVehiculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTAResumen;
    private javax.swing.JTextField jTClienteBuscado;
    private javax.swing.JTextField jTDias;
    // End of variables declaration//GEN-END:variables
}
